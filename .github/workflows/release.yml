name: Create Release

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  #deployments: write

jobs:
  build:
    runs-on:
      - ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: ./go.mod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Release a new version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build application
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: "0"
        run: |
          go build -o duc2mqtt -ldflags "-X main.version=${{ steps.tag_version.outputs.new_tag }}"

      - name: Update version
        id: update_version
        run: |
          jq --arg version "${{ steps.tag_version.outputs.new_tag }}" '.version = $version' addon/config.json > tmp.json && mv tmp.json addon/config.json
          sed -ir 's!(git clone https://github.com/SourceForgery/duc2mqtt.git .).*$!\1 ${{ steps.tag_version.outputs.new_tag }}!g' addon/Dockerfile

      - name: push version
        run: |
          git config --local user.email "github@github-actions.example.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Update versions"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          artifacts: "duc2mqtt"
          artifactContentType: "application/octet-stream"
